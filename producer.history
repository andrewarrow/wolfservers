useradd -c 'aa' -m -d /home/aa -s /bin/bash -G sudo aa
rsync --archive --chown=aa:aa ~/.ssh /home/aa
echo "aa ALL=(ALL) NOPASSWD:ALL" >> /etc/sudoers.d/99_sudo_include_file

wget https://hydra.iohk.io/build/6163141/download/1/cardano-node-1.26.1-linux.tar.gz
gunzip cardano-node-1.26.1-linux.tar.gz
tar -xf cardano-node-1.26.1-linux.tar 
rm *.tar
mkdir cardano-my-node
echo PATH="$HOME/.local/bin:$PATH" >> $HOME/.bashrc
echo export LD_LIBRARY_PATH="/usr/local/lib:$LD_LIBRARY_PATH" >> $HOME/.bashrc
echo export NODE_HOME=$HOME/cardano-my-node >> $HOME/.bashrc
echo export NODE_CONFIG=mainnet>> $HOME/.bashrc
echo export NODE_BUILD_NUM=$(curl https://hydra.iohk.io/job/Cardano/iohk-nix/cardano-deployment/latest-finished/download/1/index.html | grep -e "build" | sed 's/.*build\/\([0-9]*\)\/download.*/\1/g') >> $HOME/.bashrc

source $HOME/.bashrc
mkdir $NODE_HOME
cd cardano-my-node/
wget -N https://hydra.iohk.io/build/${NODE_BUILD_NUM}/download/1/${NODE_CONFIG}-byron-genesis.json
wget -N https://hydra.iohk.io/build/${NODE_BUILD_NUM}/download/1/${NODE_CONFIG}-topology.json
wget -N https://hydra.iohk.io/build/${NODE_BUILD_NUM}/download/1/${NODE_CONFIG}-shelley-genesis.json
wget -N https://hydra.iohk.io/build/${NODE_BUILD_NUM}/download/1/${NODE_CONFIG}-config.json
sed -i ${NODE_CONFIG}-config.json     -e "s/TraceBlockFetchDecisions\": false/TraceBlockFetchDecisions\": true/g"

echo export CARDANO_NODE_SOCKET_PATH="$NODE_HOME/db/socket" >> $HOME/.bashrc
source $HOME/.bashrc
cat > $NODE_HOME/${NODE_CONFIG}-topology.json {{unescape .LtLt}} EOF 
 {
    "Producers": [
      {
        "addr": "{{.RelayIP}}",
        "port": 6000,
        "valency": 1
      }
    ]
  }
EOF

cat > $NODE_HOME/startBlockProducingNode.sh {{unescape .LtLt}} EOF 
#!/bin/bash
DIRECTORY=$NODE_HOME
PORT=6000
HOSTADDR=0.0.0.0
TOPOLOGY=\${DIRECTORY}/${NODE_CONFIG}-topology.json
DB_PATH=\${DIRECTORY}/db
SOCKET_PATH=\${DIRECTORY}/db/socket
CONFIG=\${DIRECTORY}/${NODE_CONFIG}-config.json
/usr/local/bin/cardano-node run --topology \${TOPOLOGY} --database-path \${DB_PATH} --socket-path \${SOCKET_PATH} --host-addr \${HOSTADDR} --port \${PORT} --config \${CONFIG}
EOF

chmod +x /root/cardano-my-node/startBlockProducingNode.sh 
cat > $NODE_HOME/cardano-node.service {{unescape .LtLt}} EOF 
# The Cardano node service (part of systemd)
# file: /etc/systemd/system/cardano-node.service 

[Unit]
Description     = Cardano node service
Wants           = network-online.target
After           = network-online.target 

[Service]
User            = ${USER}
Type            = simple
WorkingDirectory= ${NODE_HOME}
ExecStart       = /bin/bash -c '${NODE_HOME}/startBlockProducingNode.sh'
KillSignal=SIGINT
RestartKillSignal=SIGINT
TimeoutStopSec=2
LimitNOFILE=32768
Restart=always
RestartSec=5
SyslogIdentifier=cardano-node

[Install]
WantedBy= multi-user.target
EOF

cd /usr/local/bin/
ln -s /root/cardano-node cardano-node
ln -s /root/cardano-cli cardano-cli
cd cardano-my-node/

mv $NODE_HOME/cardano-node.service /etc/systemd/system/cardano-node.service
chmod 644 /etc/systemd/system/cardano-node.service
systemctl daemon-reload
systemctl enable cardano-node
systemctl reload-or-restart cardano-node

cd $NODE_HOME
apt-get update -y
apt install bc tcptraceroute jq -y

curl -s -o gLiveView.sh https://raw.githubusercontent.com/cardano-community/guild-operators/master/scripts/cnode-helper-scripts/gLiveView.sh
curl -s -o env https://raw.githubusercontent.com/cardano-community/guild-operators/master/scripts/cnode-helper-scripts/env
chmod 755 gLiveView.sh
sed -i env     -e "s/\#CONFIG=\"\${CNODE_HOME}\/files\/config.json\"/CONFIG=\"\${NODE_HOME}\/mainnet-config.json\"/g"     -e "s/\#SOCKET=\"\${CNODE_HOME}\/sockets\/node0.socket\"/SOCKET=\"\${NODE_HOME}\/db\/socket\"/g"

cardano-cli node key-gen-KES     --verification-key-file kes.vkey     --signing-key-file kes.skey
pushd +1
slotsPerKESPeriod=$(cat $NODE_HOME/${NODE_CONFIG}-shelley-genesis.json | jq -r '.slotsPerKESPeriod')
echo slotsPerKESPeriod: ${slotsPerKESPeriod}
